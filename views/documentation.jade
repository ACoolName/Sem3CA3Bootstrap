doctype html
html(lang="en")
    head
        title= pageTitle
    body
        h1 Who did what?
        p.
            As with the other projects we split our work into 2 groups of 2.
            Martin and Tobias worked mostly on the back-end in the start and Teodor and Raul
            worked on the front-end. Half way into the project we had enough things to do
            that every started working on the own parts of the project and did a little here
            and a little there which should be clear in the Github commit log.
        h1  Design back-end:
        p.
            One of the most important principles in programming is DRY and during all of our
            projects we try and design the structure and code in a way that we can abide to
            this principle. The biggest examples of this is our abstract classes for our model
            helper classes and the most common REST routes.
        h1  Design front-end:
        p.
            Bootstrap has been an amazing tool that helped us turn our basic HTML tables into
            nice, professional looking tables. The menu at the top of all our pages is also
            part of the things that bootstrap has to offer. Jade took a while to figure out
            but after a little confusion everything got clear and easy to use. We tried to keep
            our javascript code away from our .jade files therefore we created the site.js file
            where we have all our javascript code that we use on the pages.
        h1  GitHub
        p.
            Prior to this compulsory assignment, Git was a nightmare. We all had issues with it
            and it was our worst enemy. However, this project, Git acted nice and we had almost
            no problem at all. There were the occasional complications with the .gitignore file
            and with the workspace.xml file, but they were minor in comparison to our previous CAs.
        h1  Bonus
        p.
            We also focused some of our attention on the bonus tasks. Bonus 1 created a few issues
            with the amount of information that the page required. The orderDetails page requires
            information from most of the database therefore the rest for that is quite complicated
            (you will notice that it doesn't really respect our standard). Bonus 2 is made up of
            mostly repetitive tasks, the same thing for different pages. We didn't do it completely,
            however we did it for the categories tab and it works perfectly. Editing and removing
            (as requested in part 3) has been done mostly by Martin and it consists of the back-end
            rest and the front end (basically the buttons and the editing of the text).
        h1  Testing
        p.
            We decided to focus our testing on the different model helper classes
            as most of the other code uses either code written for express or front end code which
            we'll learn how to test next period.
            We used Mocka together with Should and to make sure we had a consistent and quick tests
            that also didn't interfere with any database we used <a href="https://www.npmjs.org/package/mockgoose">mockgoose</a>.
            Mockgoose intercepts connection calls made by mongoose and redirect them to a
            in memory "database" instead of relying on a mongodb database.
            It handles most functionality that mongoose has, at least enough for this project.
            To make sure of consistency we made a modified version of the import_database script that
            we run before each test which allows us to reset the "database". We also used a smaller
            dataset to ensure quick speed and a controlled test environment."
        h3 Test results
        img(src= "/images/testCA3results.png")
        h1